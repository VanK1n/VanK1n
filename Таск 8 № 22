import java.util.*;

public class Task8 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        testFindOverlayPosition();

        System.out.println("Введите размеры первого массива (строки и столбцы):");
        int rows1 = scanner.nextInt();
        int cols1 = scanner.nextInt();
        System.out.println("Введите элементы первого массива:");
        int[][] array1 = readArray(scanner, rows1, cols1);

        System.out.println("Введите размеры второго массива (строки и столбцы):");
        int rows2 = scanner.nextInt();
        int cols2 = scanner.nextInt();
        System.out.println("Введите элементы второго массива:");
        int[][] array2 = readArray(scanner, rows2, cols2);

        int[] answer = findOverlayPosition(array1, array2);

        if (answer != null) {
            System.out.printf("Второй массив можно наложить на первый, начиная с строки %d и столбца %d.%n", answer[0] + 1, answer[1] + 1);
        } else {
            System.out.println("Второй массив нельзя наложить на первый массив.");
        }
    }

    public static int[][] readArray(Scanner scanner, int rows, int cols) {
        int[][] array = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                array[i][j] = scanner.nextInt();
            }
        }
        return array;
    }

    public static int[] findOverlayPosition(int[][] array1, int[][] array2) {
        int rows1 = array1.length;
        int cols1 = array1[0].length;
        int rows2 = array2.length;
        int cols2 = array2[0].length;

        for (int i = 0; i <= rows1 - rows2; i++) {
            for (int j = 0; j <= cols1 - cols2; j++) {
                if (canOverlay(array1, array2, i, j)) {
                    return new int[]{i, j};
                }
            }
        }

        return null;
    }

    public static boolean canOverlay(int[][] array1, int[][] array2, int stRow, int stCol) {
        int rows2 = array2.length;
        int cols2 = array2[0].length;

        for (int i = 0; i < rows2; i++) {
            for (int j = 0; j < cols2; j++) {
                if (array1[stRow + i][stCol + j] != array2[i][j]) {
                    return false;
                }
            }
        }

        return true;
    }

    public static void testFindOverlayPosition() {
        int[][] array1Test1 = {
                {1, 2, 3, 4},
                {5, 6, 7, 8},
                {9, 10, 11, 12}
        };
        int[][] array2Test1 = {
                {6, 7},
                {10, 11}
        };
        assert testOverlay(array1Test1, array2Test1, new int[]{1, 1});

        int[][] array1Test2 = {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 9}
        };
        int[][] array2Test2 = {
                {5, 6},
                {8, 10}
        };
        assert testOverlay(array1Test2, array2Test2, null);

        int[][] array1Test3 = {
                {1, 2},
                {3, 4}
        };
        int[][] array2Test3 = {
                {1, 2, 3},
                {4, 5, 6}
        };
        assert testOverlay(array1Test3, array2Test3, null);

        int[][] array1Test4 = {
                {1, 2},
                {3, 4}
        };
        int[][] array2Test4 = {
                {1, 2},
                {3, 4}
        };
        assert testOverlay(array1Test4, array2Test4, new int[]{0, 0});

        int[][] array1Test5 = {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 9}
        };
        int[][] array2Test5 = {
                {8, 9}
        };
        assert testOverlay(array1Test5, array2Test5, new int[]{2, 1});

        System.out.println("Все тесты успешно пройдены!");
    }

    public static boolean testOverlay(int[][] array1, int[][] array2, int[] ans) {
        int[] result = Task8.findOverlayPosition(array1, array2);
        return Arrays.equals(result, ans);
    }
}
